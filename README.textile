h1. OVERVIEW

UnityREPL is a REPL (Read, Eval, Print, Loop) tool based on "Miguel's CSharpRepl":CSharpRepl but for "Unity":Unity.

What's a REPL?  See the "Wikipedia article.":Wikipedia or the "demo videos":Wiki on the Wiki.


h1. INSTALLATION


h2. NON-GIT, OR NON-UNITY-PRO SETUP

* Grab the ".unitypackage":Package from the downloads page.
* Open your project.
* Click "Assets" -> "Import Package..." from the menu, and select the file.


h2. GIT SETUP IN A UNITY PRO PROJECT THAT IS NOT VERSIONED WITH GIT

*This is only viable if your project is set up with External Version Control enabled.  If not, please download the .unitypackage and use that.*

bc.   cd myproject/Assets/
  mkdir -p Editor/
  cd Editor/
  git clone git://github.com/MrJoy/UnityREPL.git
  cd UnityREPL/
  git checkout master


h2. GIT SETUP IN A UNITY PRO PROJECT VERSIONED WITH GIT

*This is only viable if your project is set up with External Version Control enabled.  If not, please download the .unitypackage and use that.*

bc.   cd myproject/
  mkdir -p Assets/Editor
  git submodule add git://github.com/MrJoy/UnityREPL.git Assets/Editor/UnityREPL
  git submodule init
  git submodule update


h1. USAGE

* Click "Window" -> "C# Shell"
* Dock the new tab wherever you wish, and enjoy!

From this window you can enter C# code and run it.  You should have access to all classes you've defined in C#, JavaScript, or Boo in your project.


h1. COMPATIBILITY

Tested on Unity 3.1.0, but should work on Unity 3.0.0 as well.

Will not work on older versions of Unity (2.5.x, 2.6.x, or Unity/iPhone 1.x).


h1. LANGUAGE VERSION

This tool implements a newer version of the C# language than Unity itself supports unless you are using Unity 3.0.  You get a couple nifty features for code entered into the interactive editor:

bc.   // Support for "var" keyword:
  var i = 3;
  // Linq syntax:
  using System.IO;
  from f in Directory.GetFiles("/etc")
    let fi = new FileInfo(f)
    where fi.LastWriteTime > DateTime.Now - TimeSpan.FromDays(7)
    select f;

Bear in mind that if you are using Unity prior to 3.0, when going between source files in your project and this tool that the new language features will NOT be accessible from .cs files!


h1. EDITING CODE

UnityREPL uses a @GUILayout.TextArea@, but with some added functionality:

* Support for cut, copy, paste, and select-all.
* Ability to enter tabs in the source editor.
* Block indent/unindent using COMMAND-] and COMMAND-[ (just like XCode and TextMate)


h1. LICENSE

Dual licensed under the terms of the MIT X11 or GNU GPL, as per the original code.

The included Mono.CSharp.dll is a completely unmodified copy from "Mono 2.4.":Mono


h1. TODO

* Undo functionality.
* Editing history support (Bash style).
* Smooth out some hiccups with assembly reloads.
** Local vars getting blown away.
** Make sure we're not leaking references to things.
* Add things to UnityBaseClass to help with Unity workflows.
* Lots of other little things; see the source code for more info.


[Mono]http://www.mono-project.com
[Wiki]http://wiki.github.com/MrJoy/UnityREPL/
[Wikipedia]http://en.wikipedia.org/wiki/Read_Eval_Print_Loop
[CSharpRepl]http://www.mono-project.com/CsharpRepl
[Unity]http://Unity3D.com
[Package]http://github.com/downloads/MrJoy/UnityREPL/UnityREPL_0.8.unitypackage
